# bot/handlers_start.py (—Ñ—Ä–∞–≥–º–µ–Ω—Ç: —Ö–µ–Ω–¥–ª–µ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏)
from __future__ import annotations
from datetime import datetime, timezone
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from .config import settings
from .services import get_subscription_status, is_member_of_channel

router = Router()

def buy_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É", callback_data="buy_open")]])

@router.callback_query(F.data == "check_status")
async def on_check_status(cb: CallbackQuery, bot: Bot):
    user_id = cb.from_user.id
    now = datetime.now(timezone.utc)
    sub = await get_subscription_status(user_id)

    def _fmt(dt): return dt.astimezone(timezone.utc).strftime("%Y-%m-%d %H:%M UTC") if dt else "‚Äî"

    active = bool(sub and sub.status == "active" and sub.paid_until and now <= sub.paid_until)
    if active:
        await cb.message.answer(f"‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞.\n–î–æ—Å—Ç—É–ø –¥–æ: <b>{_fmt(sub.paid_until)}</b>", parse_mode="HTML")
        await cb.answer(); return

    # —Ñ–æ–ª–±–µ–∫: –ø–æ —Ñ–∞–∫—Ç—É –æ–Ω –≤–Ω—É—Ç—Ä–∏ –∫–∞–Ω–∞–ª–∞?
    if await is_member_of_channel(bot, settings.CHANNEL_ID, user_id):
        await cb.message.answer(
            "‚ÑπÔ∏è –£ –≤–∞—Å —î –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–Ω–∞–ª—É (–∑–∞ —Ñ–∞–∫—Ç–æ–º —á–ª–µ–Ω—Å—Ç–≤–∞), –∞–ª–µ –≤ –æ–±–ª—ñ–∫–æ–≤–æ–º—É –∑–∞–ø–∏—Å—ñ –ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞. "
            "–Ø–∫—â–æ –≤–∏ —â–æ–π–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ ‚Äî –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É¬ª.",
            reply_markup=buy_kb(),
        )
        await cb.answer(); return

    await cb.message.answer("‚ùå –ü—ñ–¥–ø–∏—Å–∫–∏ –Ω–µ–º–∞—î –∞–±–æ –≤–æ–Ω–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å.\n\n–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø ‚Äî –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá", reply_markup=buy_kb())
    await cb.answer()
