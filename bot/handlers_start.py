# bot/handlers_start.py
from __future__ import annotations

from aiogram import Router, Bot, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from .services import ensure_user, has_active_access, get_subscription_status
from .config import settings

router = Router()


def _main_keyboard(has_access: bool) -> InlineKeyboardMarkup:
    rows = [
        [InlineKeyboardButton(text="üí≥ –û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É", callback_data="buy")],
        [InlineKeyboardButton(text="‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –ø—ñ–¥–ø–∏—Å–∫–∏", callback_data="check")],
        [InlineKeyboardButton(text="üõü –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ @zivyn4ik", url="https://t.me/zivyn4ik")],
    ]
    if has_access:
        rows[0] = [InlineKeyboardButton(text="‚û°Ô∏è –£–≤—ñ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=settings.TG_JOIN_REQUEST_URL)]
    return InlineKeyboardMarkup(inline_keyboard=rows)


@router.message(CommandStart())
async def cmd_start(message: Message, bot: Bot):
    await ensure_user(message.from_user)

    active = await has_active_access(message.from_user.id)
    kb = _main_keyboard(active)

    # –í–ê–ñ–ù–û: –Ω–∏–∫–∞–∫–∏—Ö ¬´–ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞‚Ä¶¬ª –µ—Å–ª–∏ –Ω–µ—Ç confirmed access
    if active:
        st = await get_subscription_status(message.from_user.id)
        until_text = st.paid_until.strftime("%Y-%m-%d") if st.paid_until else "–Ω–µ–≤—ñ–¥–æ–º–æ"
        await message.answer(
            f"üëã –í—ñ—Ç–∞—î–º–æ —É –Ω–∞–≤—á–∞–ª—å–Ω–æ–º—É –±–æ—Ç—ñ –ù–ú–¢ 2026 | –Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏!\n\n"
            f"‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {until_text}.",
            reply_markup=kb,
        )
    else:
        await message.answer(
            "üëã –í—ñ—Ç–∞—î–º–æ —É –Ω–∞–≤—á–∞–ª—å–Ω–æ–º—É –±–æ—Ç—ñ –ù–ú–¢ 2026 | –Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏!\n\n"
            "‚ùå –ü—ñ–¥–ø–∏—Å–∫–∏ –Ω–µ–º–∞—î –∞–±–æ –≤–æ–Ω–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ.",
            reply_markup=kb,
        )


# -------- callbacks --------

@router.callback_query(F.data == "buy")
async def cb_buy(call: CallbackQuery, bot: Bot):
    from .handlers_buy import send_buy_button
    await call.answer()
    await send_buy_button(call.message, bot)


@router.callback_query(F.data == "check")
async def cb_check(call: CallbackQuery, bot: Bot):
    await call.answer()
    # –ü—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç ‚Äî —Ç–∞–º —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    await cmd_start(call.message, bot)
