# bot/handlers_buy.py
from __future__ import annotations

import logging
from aiogram import Router, Bot
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

# –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à —Ä–∞–±–æ—á–∏–π –º–æ–¥—É–ª—å WayForPay –∏–∑ –∞—Ä—Ö–∏–≤–∞!
from .payments.wayforpay import create_invoice
from .config import settings

router = Router()
log = logging.getLogger("handlers.buy")


async def send_buy_button(message: Message, bot: Bot):
    """
    –ö—Ä–∞—Å–∏–≤–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ /buy.
    –ù–ò–ö–ê–ö–ò–• –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤–∞—à–µ–π –ª–æ–≥–∏–∫–µ –ø–æ–¥–ø–∏—Å–µ–π/–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ WFP.
    """
    user_id = message.from_user.id
    try:
        url = await create_invoice(
            user_id=user_id,
            amount=settings.PRICE,
            currency=settings.CURRENCY,
            product_name=getattr(settings, "PRODUCT_NAME", "Channel subscription"),
        )
    except Exception as e:
        log.exception("Failed to create invoice for user %s: %s", user_id, e)
        await message.answer(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ä–∞—Ö—É–Ω–æ–∫. –ü—Ä–∏—á–∏–Ω–∞: {e}")
        return

    kb = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É", url=url)]]
    )
    await message.answer("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É:", reply_markup=kb)


@router.message(Command("buy"))
async def cmd_buy(message: Message, bot: Bot):
    # –ö–æ–º–∞–Ω–¥–∞ /buy —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–æ–ø–∫—É
    await send_buy_button(message, bot)
